// GENERATED C++ CODE FROM PathGen 3.4.6
<<<<<<< HEAD
// Exported: Tue Jan 17 17:44:35 2023

// Robot assumes a starting position of (17.9,102.2) at heading of 20.45 degrees.
=======
// Exported: Tue Jan 17 21:53:22 2023

// Robot assumes a starting position of (14.1,102.0) at heading of 16.54 degrees.
>>>>>>> main
robot.flywheel->setVelocity(3115); // Preemptively set speed for next shot
setEffort(*robot.intake, 1); // Start running intake immediately
robot.drive->setBrakeMode(pros::E_MOTOR_BRAKE_BRAKE);

<<<<<<< HEAD
goForwardU(robot, GFU_DIST_PRECISE(0.45), GFU_TURN, 13.53, getRadians(20.45));
pros::delay(1240);
goForwardU(robot, GFU_DIST_PRECISE(0.52), GFU_TURN, -9.31, getRadians(380.44));
goTurnU(robot, GTU_TURN_PRECISE, getRadians(299.38));
goForwardU(robot, GFU_DIST_PRECISE(1), GFU_TURN, -11.13, getRadians(299.38));
goTurnU(robot, GTU_TURN_PRECISE, getRadians(360.01));
/*goForwardU(robot, GFU_DIST_PRECISE(0.48), GFU_TURN, -9.02, getRadians(360.01));*/

// Back up and do rollers using drivetrain current detection
robot.drive->setEffort(-0.3, -0.3);
robot.roller->move_velocity(100); // max roller speed

// Keep driving until current exceeds threshold indicating contact with wall
while (robot.drive->getCurrent() < 1.2) pros::delay(10);

// stop rollers
robot.roller->brake();
robot.drive->stop();

goForwardU(robot, GFU_DIST_PRECISE(0.55), GFU_TURN, 8.81, getRadians(359.99));
=======
goForwardU(robot, GFU_DIST_PRECISE(0.45), GFU_TURN, 16.17, getRadians(16.54));
pros::delay(1000);
goTurnU(robot, GTU_TURN_PRECISE, getRadians(363.51));
goForwardU(robot, GFU_DIST_PRECISE(0.52), GFU_TURN, -8.25, getRadians(363.51));
goTurnU(robot, GTU_TURN_PRECISE, getRadians(303.89));
goForwardU(robot, GFU_DIST_PRECISE(1), GFU_TURN, -8.85, getRadians(303.89));
goTurnU(robot, GTU_TURN_PRECISE, getRadians(361.01));
/*goForwardU(robot, GFU_DIST_PRECISE(0.48), GFU_TURN, -10.57, getRadians(361.01));*/



goForwardU(robot, GFU_DIST_PRECISE(0.55), GFU_TURN, 10.35, getRadians(1.03));
>>>>>>> main
goTurnU(robot, GTU_TURN_PRECISE, getRadians(5.83));

shoot(robot);
robot.flywheel->setVelocity(2954); // Preemptively set speed for next shot

goTurnU(robot, GTU_TURN_PRECISE, getRadians(301.6));
goForwardU(robot, GFU_DIST_PRECISE(0.46), GFU_TURN, 32.79, getRadians(301.6));
pros::delay(1000);
goTurnU(robot, GTU_TURN_PRECISE, getRadians(25.15));

shoot(robot);
robot.flywheel->setVelocity(3180); // Preemptively set speed for next shot

goTurnU(robot, GTU_TURN_PRECISE, getRadians(39.17));
goForwardU(robot, GFU_DIST_PRECISE(0.45), GFU_TURN, 7.48, getRadians(39.17));
goTurnU(robot, GTU_TURN_PRECISE, getRadians(179.44));
goForwardU(robot, GFU_DIST_PRECISE(0.42), GFU_TURN, 21.92, getRadians(179.44));
<<<<<<< HEAD
pros::delay(1540);
goTurnU(robot, GTU_TURN_PRECISE, getRadians(16.93));

shoot(robot);
robot.flywheel->setVelocity(3180); // Preemptively set speed for next shot

goTurnU(robot, GTU_TURN_PRECISE, getRadians(271.52));
goForwardU(robot, GFU_DIST_PRECISE(0.55), GFU_TURN, 32.24, getRadians(271.52));
goTurnU(robot, GTU_TURN_PRECISE, getRadians(358.88));
goForwardU(robot, GFU_DIST_PRECISE(0.45), GFU_TURN, 32.88, getRadians(358.88));
pros::delay(1000);
=======
pros::delay(1000);
goTurnU(robot, GTU_TURN_PRECISE, getRadians(16.93));

shoot(robot);
robot.flywheel->setVelocity(3180); // Preemptively set speed for next shot

goTurnU(robot, GTU_TURN_PRECISE, getRadians(271.52));
goForwardU(robot, GFU_DIST_PRECISE(0.55), GFU_TURN, 32.24, getRadians(271.52));
goTurnU(robot, GTU_TURN_PRECISE, getRadians(358.88));
goForwardU(robot, GFU_DIST_PRECISE(0.45), GFU_TURN, 32.88, getRadians(358.88));
pros::delay(1000);
>>>>>>> main
goTurnU(robot, GTU_TURN_PRECISE, getRadians(42.19));

shoot(robot);

// ================================================

